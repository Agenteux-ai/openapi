parameters:
  - $ref: ../parameters/schemaId.yaml
get:
  tags:
    - Schemas
  summary: Retrieve a schema
  operationId: 'schema::read'
  responses:
    '200':
      description: Schema details including the latest schema text and version.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SchemaResponse.json
    '401':
      $ref: ../../components/responses/401Unauthorized.yaml
    '403':
      $ref: ../../components/responses/403Forbidden.yaml
    '404':
      $ref: ../../components/responses/404NotFound.yaml
  deprecated: false
put:
  tags:
    - Schemas
  summary: Update/replace a schema
  operationId: 'schema::update'
  requestBody:
    description: All the desired schema details. Only name, slug, and description can be updated.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/SchemaDto.json
    required: true
  responses:
    '200':
      description: Schema details including the latest schema text and version.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SchemaResponse.json
    '400':
      $ref: ../../components/responses/400BadRequest.yaml
    '401':
      $ref: ../../components/responses/401Unauthorized.yaml
    '403':
      $ref: ../../components/responses/403Forbidden.yaml
    '404':
      $ref: ../../components/responses/404NotFound.yaml
    '409':
      $ref: ../../components/responses/409Conflict.yaml
delete:
  tags:
    - Schemas
  summary: Remove a schema (and all its versions)
  operationId: 'schema::delete'
  responses:
    '204':
      $ref: ../../components/responses/204NoContent.yaml
    '401':
      $ref: ../../components/responses/401Unauthorized.yaml
    '403':
      $ref: ../../components/responses/403Forbidden.yaml
    '404':
      $ref: ../../components/responses/404NotFound.yaml
patch:
  tags:
    - Schemas
  summary: Perform a partial update of a schema
  description: |
    This method observes [JSON patch](https://jsonpatch.com/) semantics. Any properties that are explicity set
    (e.g. to empty) will update the schema configuration. Properties not included in
    the body will not effect the schema configuration.
  operationId: 'schema::patch'
  requestBody:
    description: Schema details to be updated. Only the fields provided will be updated. Only name, slug, and description can be updated with PATCH.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/SchemaDto.json
    required: true
  responses:
    '200':
      description: The entire newly-updated schema details including the latest schema text and version.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SchemaResponse.json
    '400':
      $ref: ../../components/responses/400BadRequest.yaml
    '401':
      $ref: ../../components/responses/401Unauthorized.yaml
    '403':
      $ref: ../../components/responses/403Forbidden.yaml
    '404':
      $ref: ../../components/responses/404NotFound.yaml
    '409':
      $ref: ../../components/responses/409Conflict.yaml
post:
  tags:
    - Schemas
  summary: Perform data verification against a schema
  operationId: 'schema::validate'
  requestBody:
    description: The data to be verified against the schema.
    content:
      text/plain:
        schema:
          type: string
    required: true
  responses:
    '200':
      description: The result of the data verification.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ValidationResult.json
    '400':
      $ref: ../../components/responses/400BadRequest.yaml
    '401':
      $ref: ../../components/responses/401Unauthorized.yaml
    '403':
      $ref: ../../components/responses/403Forbidden.yaml
    '404':
      $ref: ../../components/responses/404NotFound.yaml
